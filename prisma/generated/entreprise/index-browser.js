
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EmployesScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  telephone: 'telephone',
  poste: 'poste',
  date_embauche: 'date_embauche',
  date_arret: 'date_arret',
  typeContrat: 'typeContrat',
  role: 'role',
  statut: 'statut'
};

exports.Prisma.BulletinsSalaireScalarFieldEnum = {
  id: 'id',
  mois: 'mois',
  salaire_base: 'salaire_base',
  deductions: 'deductions',
  salaire_net: 'salaire_net',
  date_generation: 'date_generation',
  payRunId: 'payRunId',
  employeId: 'employeId'
};

exports.Prisma.PayRunScalarFieldEnum = {
  id: 'id',
  periodeDebut: 'periodeDebut',
  periodeFin: 'periodeFin',
  statut: 'statut',
  typePayRun: 'typePayRun',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContratScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  type: 'type',
  salaireFixe: 'salaireFixe',
  tauxJournalier: 'tauxJournalier',
  tauxHoraire: 'tauxHoraire',
  date_embauche: 'date_embauche',
  date_arret: 'date_arret'
};

exports.Prisma.PointagesScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  date: 'date',
  entree: 'entree',
  sortie: 'sortie'
};

exports.Prisma.PaiementScalarFieldEnum = {
  id: 'id',
  montant: 'montant',
  mode: 'mode',
  statut: 'statut',
  reference: 'reference',
  date_paiement: 'date_paiement',
  bulletinId: 'bulletinId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.EmployesOrderByRelevanceFieldEnum = {
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  telephone: 'telephone',
  poste: 'poste'
};

exports.Prisma.BulletinsSalaireOrderByRelevanceFieldEnum = {
  mois: 'mois'
};

exports.Prisma.PaiementOrderByRelevanceFieldEnum = {
  reference: 'reference'
};
exports.TypeContrat = exports.$Enums.TypeContrat = {
  CDI: 'CDI',
  CDD: 'CDD',
  JOURNALIER: 'JOURNALIER',
  HORAIRE: 'HORAIRE'
};

exports.Role = exports.$Enums.Role = {
  CAISSIER: 'CAISSIER',
  EMPLOYE: 'EMPLOYE'
};

exports.Statut = exports.$Enums.Statut = {
  ACTIF: 'ACTIF',
  INACTIF: 'INACTIF'
};

exports.PayRunStatut = exports.$Enums.PayRunStatut = {
  EN_COURS: 'EN_COURS',
  VALIDE: 'VALIDE',
  PAYE: 'PAYE'
};

exports.TypePayRun = exports.$Enums.TypePayRun = {
  MENSUEL: 'MENSUEL',
  HEBDOMADAIRE: 'HEBDOMADAIRE',
  JOURNALIER: 'JOURNALIER'
};

exports.ModePaiement = exports.$Enums.ModePaiement = {
  ESPECES: 'ESPECES',
  VIREMENT: 'VIREMENT',
  CHEQUE: 'CHEQUE'
};

exports.StatutPaiement = exports.$Enums.StatutPaiement = {
  EN_ATTENTE: 'EN_ATTENTE',
  PAYE: 'PAYE',
  ECHEC: 'ECHEC'
};

exports.Prisma.ModelName = {
  Employes: 'Employes',
  BulletinsSalaire: 'BulletinsSalaire',
  PayRun: 'PayRun',
  Contrat: 'Contrat',
  Pointages: 'Pointages',
  Paiement: 'Paiement'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
