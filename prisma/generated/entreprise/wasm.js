
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EmployesScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  telephone: 'telephone',
  poste: 'poste',
  date_embauche: 'date_embauche',
  date_arret: 'date_arret',
  typeContrat: 'typeContrat',
  role: 'role',
  statut: 'statut'
};

exports.Prisma.BulletinsSalaireScalarFieldEnum = {
  id: 'id',
  mois: 'mois',
  salaire_base: 'salaire_base',
  deductions: 'deductions',
  salaire_net: 'salaire_net',
  date_generation: 'date_generation',
  payRunId: 'payRunId',
  employeId: 'employeId'
};

exports.Prisma.PayRunScalarFieldEnum = {
  id: 'id',
  periodeDebut: 'periodeDebut',
  periodeFin: 'periodeFin',
  statut: 'statut',
  typePayRun: 'typePayRun',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContratScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  type: 'type',
  salaireFixe: 'salaireFixe',
  tauxJournalier: 'tauxJournalier',
  tauxHoraire: 'tauxHoraire',
  date_embauche: 'date_embauche',
  date_arret: 'date_arret'
};

exports.Prisma.PointagesScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  date: 'date',
  entree: 'entree',
  sortie: 'sortie'
};

exports.Prisma.PaiementScalarFieldEnum = {
  id: 'id',
  montant: 'montant',
  mode: 'mode',
  statut: 'statut',
  reference: 'reference',
  date_paiement: 'date_paiement',
  bulletinId: 'bulletinId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.EmployesOrderByRelevanceFieldEnum = {
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  telephone: 'telephone',
  poste: 'poste'
};

exports.Prisma.BulletinsSalaireOrderByRelevanceFieldEnum = {
  mois: 'mois'
};

exports.Prisma.PaiementOrderByRelevanceFieldEnum = {
  reference: 'reference'
};
exports.ModePaiement = exports.$Enums.ModePaiement = {
  ESPECES: 'ESPECES',
  VIREMENT: 'VIREMENT',
  CHEQUE: 'CHEQUE'
};

exports.StatutPaiement = exports.$Enums.StatutPaiement = {
  EN_ATTENTE: 'EN_ATTENTE',
  PAYE: 'PAYE',
  ECHEC: 'ECHEC'
};

exports.Statut = exports.$Enums.Statut = {
  ACTIF: 'ACTIF',
  INACTIF: 'INACTIF'
};

exports.Role = exports.$Enums.Role = {
  CAISSIER: 'CAISSIER',
  EMPLOYE: 'EMPLOYE'
};

exports.TypeContrat = exports.$Enums.TypeContrat = {
  CDI: 'CDI',
  CDD: 'CDD',
  JOURNALIER: 'JOURNALIER',
  HORAIRE: 'HORAIRE'
};

exports.PayRunStatut = exports.$Enums.PayRunStatut = {
  EN_COURS: 'EN_COURS',
  VALIDE: 'VALIDE',
  PAYE: 'PAYE'
};

exports.TypePayRun = exports.$Enums.TypePayRun = {
  MENSUEL: 'MENSUEL',
  HEBDOMADAIRE: 'HEBDOMADAIRE',
  JOURNALIER: 'JOURNALIER'
};

exports.Prisma.ModelName = {
  Employes: 'Employes',
  BulletinsSalaire: 'BulletinsSalaire',
  PayRun: 'PayRun',
  Contrat: 'Contrat',
  Pointages: 'Pointages',
  Paiement: 'Paiement'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/ousmane-marra/Bureau/Gestion_Salaire_back-NodeJS-/prisma/generated/entreprise",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/ousmane-marra/Bureau/Gestion_Salaire_back-NodeJS-/prisma/schema.entreprise.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DSN_ENTREPRISE_EXPRESSO_1759235527566",
        "value": null
      }
    }
  },
  "inlineSchema": "// schema de la base données globale\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/entreprise\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DSN_ENTREPRISE_EXPRESSO_1759235527566\")\n}\n\nmodel Employes {\n  id            Int       @id @default(autoincrement())\n  nom           String\n  prenom        String\n  email         String    @unique\n  telephone     String    @unique\n  poste         String\n  date_embauche DateTime\n  date_arret    DateTime? // si le salarié quitte l’entreprise\n\n  typeContrat TypeContrat\n  role        Role        @default(EMPLOYE)\n  statut      Statut      @default(ACTIF)\n\n  bulletins BulletinsSalaire[]\n  Contrat   Contrat[]\n  pointage  Pointages[]\n}\n\nmodel BulletinsSalaire {\n  id              Int      @id @default(autoincrement())\n  mois            String\n  salaire_base    Decimal? @db.Decimal(10, 2)\n  deductions      Decimal  @default(0.00) @db.Decimal(10, 2)\n  salaire_net     Decimal  @db.Decimal(10, 2)\n  date_generation DateTime @default(now())\n\n  payRunId Int\n  payRun   PayRun @relation(fields: [payRunId], references: [id])\n\n  employeId Int\n  employe   Employes @relation(fields: [employeId], references: [id])\n\n  paiements Paiement[]\n}\n\nmodel PayRun {\n  id           Int                @id @default(autoincrement())\n  periodeDebut DateTime\n  periodeFin   DateTime\n  statut       PayRunStatut       @default(EN_COURS)\n  bulletins    BulletinsSalaire[]\n  typePayRun   TypePayRun         @default(MENSUEL)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Contrat {\n  id             Int         @id @default(autoincrement())\n  employeId      Int\n  type           TypeContrat\n  salaireFixe    Decimal?    @db.Decimal(10, 2)\n  tauxJournalier Decimal?    @db.Decimal(10, 2)\n  tauxHoraire    Decimal?    @db.Decimal(10, 2)\n  date_embauche  DateTime\n  date_arret     DateTime?\n\n  employe Employes @relation(fields: [employeId], references: [id])\n}\n\nmodel Pointages {\n  id        Int      @id @default(autoincrement())\n  employeId Int\n  date      DateTime // le jour du pointage\n  entree    DateTime // heure exacte d’arrivée\n  sortie    DateTime // heure exacte de départ\n\n  employe Employes @relation(fields: [employeId], references: [id])\n}\n\nmodel Paiement {\n  id            Int            @id @default(autoincrement())\n  montant       Decimal\n  mode          ModePaiement\n  statut        StatutPaiement\n  reference     String? // ex: numéro de transaction bancaire\n  date_paiement DateTime       @default(now())\n\n  bulletinId Int\n  bulletin   BulletinsSalaire @relation(fields: [bulletinId], references: [id])\n}\n\nenum ModePaiement {\n  ESPECES\n  VIREMENT\n  CHEQUE\n}\n\nenum StatutPaiement {\n  EN_ATTENTE\n  PAYE\n  ECHEC\n}\n\nenum Statut {\n  ACTIF\n  INACTIF\n}\n\nenum Role {\n  CAISSIER\n  EMPLOYE\n}\n\nenum TypeContrat {\n  CDI\n  CDD\n  JOURNALIER\n  HORAIRE\n}\n\nenum PayRunStatut {\n  EN_COURS\n  VALIDE\n  PAYE\n}\n\nenum TypePayRun {\n  MENSUEL\n  HEBDOMADAIRE\n  JOURNALIER\n}\n",
  "inlineSchemaHash": "4a53664ab50a4d8a4b7fc55a354c3476c9bdff63af707cd56f523eb4ac2549b4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Employes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prenom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telephone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poste\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date_embauche\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"date_arret\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"typeContrat\",\"kind\":\"enum\",\"type\":\"TypeContrat\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"Statut\"},{\"name\":\"bulletins\",\"kind\":\"object\",\"type\":\"BulletinsSalaire\",\"relationName\":\"BulletinsSalaireToEmployes\"},{\"name\":\"Contrat\",\"kind\":\"object\",\"type\":\"Contrat\",\"relationName\":\"ContratToEmployes\"},{\"name\":\"pointage\",\"kind\":\"object\",\"type\":\"Pointages\",\"relationName\":\"EmployesToPointages\"}],\"dbName\":null},\"BulletinsSalaire\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mois\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaire_base\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deductions\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"salaire_net\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"date_generation\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payRunId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"payRun\",\"kind\":\"object\",\"type\":\"PayRun\",\"relationName\":\"BulletinsSalaireToPayRun\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employe\",\"kind\":\"object\",\"type\":\"Employes\",\"relationName\":\"BulletinsSalaireToEmployes\"},{\"name\":\"paiements\",\"kind\":\"object\",\"type\":\"Paiement\",\"relationName\":\"BulletinsSalaireToPaiement\"}],\"dbName\":null},\"PayRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"periodeDebut\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodeFin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"PayRunStatut\"},{\"name\":\"bulletins\",\"kind\":\"object\",\"type\":\"BulletinsSalaire\",\"relationName\":\"BulletinsSalaireToPayRun\"},{\"name\":\"typePayRun\",\"kind\":\"enum\",\"type\":\"TypePayRun\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Contrat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TypeContrat\"},{\"name\":\"salaireFixe\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tauxJournalier\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tauxHoraire\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"date_embauche\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"date_arret\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"employe\",\"kind\":\"object\",\"type\":\"Employes\",\"relationName\":\"ContratToEmployes\"}],\"dbName\":null},\"Pointages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entree\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sortie\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"employe\",\"kind\":\"object\",\"type\":\"Employes\",\"relationName\":\"EmployesToPointages\"}],\"dbName\":null},\"Paiement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"montant\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"mode\",\"kind\":\"enum\",\"type\":\"ModePaiement\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"StatutPaiement\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date_paiement\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bulletinId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bulletin\",\"kind\":\"object\",\"type\":\"BulletinsSalaire\",\"relationName\":\"BulletinsSalaireToPaiement\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DSN_ENTREPRISE_EXPRESSO_1759235527566: typeof globalThis !== 'undefined' && globalThis['DSN_ENTREPRISE_EXPRESSO_1759235527566'] || typeof process !== 'undefined' && process.env && process.env.DSN_ENTREPRISE_EXPRESSO_1759235527566 || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

